import pandas as pd
import yfinance as yf
import numpy as np
import traceback

print("üìÑ [signals/advisor] –ú–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω")

def advise(symbol: str, interval: str = "1d", lookback: int = 60):
    """
    –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–≤–µ—á–∏ –∏ —Ç—Ä–µ–Ω–¥, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç dict —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–µ–π.
    """
    try:
        print(f"üöÄ [advisor] –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {symbol} ({interval}, {lookback} –¥–Ω–µ–π)")
        df = yf.download(symbol, period=f"{lookback}d", interval=interval, progress=False)
        if df.empty or len(df) < 3:
            print(f"‚ö†Ô∏è [advisor] –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {symbol}")
            return None

        df["MA20"] = df["Close"].rolling(20).mean()
        df["MA50"] = df["Close"].rolling(50).mean()

        last = df.iloc[-1]
        prev = df.iloc[-2]

        # –ï—Å–ª–∏ —Å–∫–æ–ª—å–∑—è—â–∏–µ —Å—Ä–µ–¥–Ω–∏–µ –Ω–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã
        if pd.isna(last["MA20"]) or pd.isna(last["MA50"]):
            print(f"‚ö†Ô∏è [advisor] –°–∫–æ–ª—å–∑—è—â–∏–µ —Å—Ä–µ–¥–Ω–∏–µ –Ω–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã –¥–ª—è {symbol}")
            return None

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç—Ä–µ–Ω–¥–∞
        if last["MA20"] > last["MA50"]:
            trend = "up"
        elif last["MA20"] < last["MA50"]:
            trend = "down"
        else:
            trend = "flat"

        # –°–≤–µ—á–Ω–æ–π –∞–Ω–∞–ª–∏–∑
        body = last["Close"] - last["Open"]
        body_prev = prev["Close"] - prev["Open"]

        action = "hold"
        reason = "–Ω–µ—Ç —Å–∏–≥–Ω–∞–ª–∞"

        if trend == "up" and body > 0 and last["Close"] > prev["High"]:
            action = "buy"
            reason = "–ø—Ä–æ–±–∏—Ç–∏–µ –≤–µ—Ä—à–∏–Ω—ã –Ω–∞ —Ä–∞—Å—Ç—É—â–µ–º —Ç—Ä–µ–Ω–¥–µ"
        elif trend == "down" and body < 0 and last["Close"] < prev["Low"]:
            action = "sell"
            reason = "–ø—Ä–æ–±–∏—Ç–∏–µ –º–∏–Ω–∏–º—É–º–∞ –Ω–∞ –ø–∞–¥–∞—é—â–µ–º —Ç—Ä–µ–Ω–¥–µ"
        elif trend == "up" and body < 0:
            action = "wait_pullback"
            reason = "–∫–æ—Ä—Ä–µ–∫—Ü–∏—è –Ω–∞ —Ä–∞—Å—Ç—É—â–µ–º —Ç—Ä–µ–Ω–¥–µ"
        elif trend == "down" and body > 0:
            action = "reduce_or_exit"
            reason = "–æ—Ç–∫–∞—Ç –Ω–∞ –ø–∞–¥–∞—é—â–µ–º —Ç—Ä–µ–Ω–¥–µ"

        # SL/TP —Ä–∞—Å—á—ë—Ç
        atr = (df["High"] - df["Low"]).rolling(14).mean().iloc[-1]
        sl = None
        tp = None
        rr = None

        if action in ["buy", "sell"]:
            if action == "buy":
                sl = last["Close"] - 1.5 * atr
                tp = last["Close"] + 3 * atr
            elif action == "sell":
                sl = last["Close"] + 1.5 * atr
                tp = last["Close"] - 3 * atr
            rr = abs(tp - last["Close"]) / abs(last["Close"] - sl) if sl != last["Close"] else None

        return {
            "symbol": symbol,
            "trend": trend,
            "action": action,
            "reason": reason,
            "sl": sl,
            "tp": tp,
            "rr": rr,
            "candle_time": last.name
        }
    except Exception:
        print(f"‚ùå [advisor] –û—à–∏–±–∫–∞ –≤ advise() –¥–ª—è {symbol}:")
        traceback.print_exc()
        return None

def format_advice(symbol: str, timeframe: str, rec: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≤ —Ç–µ–∫—Å—Ç"""
    t = pd.Timestamp(rec["candle_time"]).strftime("%Y-%m-%d")
    a = rec.get("action", "hold")
    reason = rec.get("reason", "‚Äî")
    sl = rec.get("sl")
    tp = rec.get("tp")
    rr = rec.get("rr")

    if a == "buy":
        return ("Advisor ¬∑ {symbol} ¬∑ {tf}\n"
                "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ü–û–ö–£–ü–ê–¢–¨ (—Ç—Ä–µ–Ω–¥ up)\n"
                "–ü—Ä–∏—á–∏–Ω–∞: {reason}\n"
                "–£—Ä–æ–≤–Ω–∏: SL={sl:.2f}, TP={tp:.2f} (RR~{rr:.1f})\n"
                "–°–≤–µ—á–∞ –∑–∞–∫—Ä—ã—Ç–∞: {t}").format(
                    symbol=symbol, tf=timeframe, reason=reason,
                    sl=sl, tp=tp, rr=rr, t=t)

    if a == "sell":
        return ("Advisor ¬∑ {symbol} ¬∑ {tf}\n"
                "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ü–†–û–î–ê–í–ê–¢–¨/SHORT (—Ç—Ä–µ–Ω–¥ down)\n"
                "–ü—Ä–∏—á–∏–Ω–∞: {reason}\n"
                "–£—Ä–æ–≤–Ω–∏: SL={sl:.2f}, TP={tp:.2f} (RR~{rr:.1f})\n"
                "–°–≤–µ—á–∞ –∑–∞–∫—Ä—ã—Ç–∞: {t}").format(
                    symbol=symbol, tf=timeframe, reason=reason,
                    sl=sl, tp=tp, rr=rr, t=t)

    if a == "reduce_or_exit":
        return ("Advisor ¬∑ {symbol} ¬∑ {tf}\n"
                "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –°–ù–ò–ñ–ê–¢–¨ –ü–û–ó–ò–¶–ò–Æ/–í–´–•–û–î–ò–¢–¨ (—Ç—Ä–µ–Ω–¥ down)\n"
                "–ü—Ä–∏—á–∏–Ω–∞: {reason}\n"
                "–°–≤–µ—á–∞ –∑–∞–∫—Ä—ã—Ç–∞: {t}").format(
                    symbol=symbol, tf=timeframe, reason=reason, t=t)

    if a == "wait_pullback":
        return ("Advisor ¬∑ {symbol} ¬∑ {tf}\n"
                "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ñ–î–ê–¢–¨ –û–¢–ö–ê–¢–ê (—Ç—Ä–µ–Ω–¥ up)\n"
                "–ü—Ä–∏—á–∏–Ω–∞: {reason}\n"
                "–°–≤–µ—á–∞ –∑–∞–∫—Ä—ã—Ç–∞: {t}").format(
                    symbol=symbol, tf=timeframe, reason=reason, t=t)

    return ("Advisor ¬∑ {symbol} ¬∑ {tf}\n"
            "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ù–ï–¢ –î–ï–ô–°–¢–í–ò–ô\n"
            "–ü—Ä–∏—á–∏–Ω–∞: {reason}\n"
            "–°–≤–µ—á–∞ –∑–∞–∫—Ä—ã—Ç–∞: {t}").format(
                symbol=symbol, tf=timeframe, reason=reason, t=t)
