import logging
from telegram.ext import Updater, CommandHandler
from apscheduler.schedulers.background import BackgroundScheduler
from apscheduler.triggers.cron import CronTrigger
import pytz
import os
from crypto_monitor import run_crypto_analysis
from ipo_monitor import run_ipo_monitor
from reddit_monitor import run_reddit_monitor

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

BOT_TOKEN = os.getenv("BOT_TOKEN")

updater = Updater(BOT_TOKEN, use_context=True)
dispatcher = updater.dispatcher

def start(update, context):
    update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø AI-–∏–Ω–≤–µ—Å—Ç–æ—Ä –±–æ—Ç. –ë—É–¥—É –¥–µ—Ä–∂–∞—Ç—å —Ç–µ–±—è –≤ –∫—É—Ä—Å–µ –Ω–æ–≤–æ—Å—Ç–µ–π IPO, –∫—Ä–∏–ø—Ç—ã –∏ Reddit üöÄ")

def job():
    try:
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫—Ä–∏–ø—Ç—ã, IPO –∏ Reddit...")
        run_crypto_analysis()
        run_ipo_monitor()
        run_reddit_monitor()  # –ü–æ–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–≥–ª—É—à–∫–∞
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ job(): {e}")

def main():
    logger.info("ü§ñ AI-–∏–Ω–≤–µ—Å—Ç–æ—Ä –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!")

    dispatcher.add_handler(CommandHandler("start", start))
    updater.start_polling()

    # –°—Ä–∞–∑—É –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ job
    job()

    # –ó–∞–ø—É—Å–∫ job –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 21:00 –ø–æ –ú–°–ö
    scheduler = BackgroundScheduler(timezone=pytz.timezone("Europe/Moscow"))
    scheduler.add_job(job, CronTrigger(hour=21, minute=0))
    scheduler.start()

    updater.idle()

if __name__ == "__main__":
    main()
