import os
import logging
from apscheduler.schedulers.background import BackgroundScheduler
from telegram.ext import Updater, CommandHandler

# –ò–º–ø–æ—Ä—Ç—ã —Ç–≤–æ–∏—Ö –º–æ–¥—É–ª–µ–π
from crypto_monitor import run_crypto_monitor
from ipo_monitor import run_ipo_monitor
from reddit_monitor import run_reddit_monitor
from screener_config import ScreenerConfig
from screener import run_screener

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO,
)
logger = logging.getLogger(__name__)


def start(update, context):
    update.message.reply_text("ü§ñ AI-Investor-Bot –∞–∫—Ç–∏–≤–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–π /status –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.")


def status(update, context):
    update.message.reply_text("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç —Ä—ã–Ω–∫–∏.")


def main():
    token = os.environ.get("TELEGRAM_BOT_TOKEN")
    if not token:
        raise ValueError("–ù–µ –Ω–∞–π–¥–µ–Ω TELEGRAM_BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

    updater = Updater(token, use_context=True)
    dp = updater.dispatcher

    # –ö–æ–º–∞–Ω–¥—ã
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("status", status))

    # –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    scheduler = BackgroundScheduler(timezone="Europe/Riga")

    # 1) Crypto monitor (–Ω–æ–≤—ã–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã)
    scheduler.add_job(run_crypto_monitor, "interval", minutes=30)

    # 2) IPO monitor (–Ω–æ–≤—ã–µ IPO)
    scheduler.add_job(run_ipo_monitor, "interval", hours=6)

    # 3) Reddit monitor (–∞–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤)
    scheduler.add_job(run_reddit_monitor, "interval", hours=1)

    # 4) Screener –¥–µ—à—ë–≤—ã—Ö x-–æ—Ö–æ—Ç–Ω–∏–∫–æ–≤ (–∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç)
    cfg = ScreenerConfig()
    scheduler.add_job(lambda: run_screener(cfg), "cron", minute="*/15")

    scheduler.start()

    # –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞
    updater.start_polling()
    updater.idle()


if __name__ == "__main__":
    main()
