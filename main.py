import logging
import os
from telegram import Update, Bot
from telegram.ext import Updater, CommandHandler, CallbackContext
from apscheduler.schedulers.background import BackgroundScheduler
from pytz import utc

from crypto_monitor import run_crypto_analysis
from ipo_monitor import run_ipo_monitor
from reddit_monitor import run_reddit_monitor

# –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")

bot = Bot(token=BOT_TOKEN)

def start(update: Update, context: CallbackContext):
    update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø AI-–∏–Ω–≤–µ—Å—Ç–æ—Ä –±–æ—Ç. –ñ–¥—É —Å–∏–≥–Ω–∞–ª—ã —Ä—ã–Ω–∫–∞...")

def job():
    try:
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫—Ä–∏–ø—Ç—ã, IPO –∏ Reddit...")
        run_crypto_analysis()
        run_ipo_monitor()
        run_reddit_monitor()  # –ü–æ–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–≥–ª—É—à–∫–∞
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ job(): {e}")

def main():
    logger.info("ü§ñ AI-–∏–Ω–≤–µ—Å—Ç–æ—Ä –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ Telegram-–∫–æ–º–∞–Ω–¥
    updater = Updater(BOT_TOKEN, use_context=True)
    dp = updater.dispatcher
    dp.add_handler(CommandHandler("start", start))

    # –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    scheduler = BackgroundScheduler(timezone=utc)
    scheduler.add_job(job, 'interval', hours=6)
    scheduler.start()

    job()  # –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ —Å—Ä–∞–∑—É
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
