import sys
import traceback
from apscheduler.schedulers.blocking import BlockingScheduler
import pytz

print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...")

try:
    from ipo_monitor import run_ipo_monitor
    from crypto_monitor import run_crypto_analysis
    from reddit_monitor import run_reddit_monitor
    from status_check import run_status_check
except Exception as e:
    print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª–µ–π:")
    traceback.print_exc()
    sys.exit(1)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞–π–º–∑–æ–Ω—ã
try:
    riga_tz = pytz.timezone("Europe/Riga")
except Exception as e:
    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Ç–∞–π–º–∑–æ–Ω—ã: {e}, –∏—Å–ø–æ–ª—å–∑—É–µ–º UTC")
    riga_tz = pytz.UTC

scheduler = BlockingScheduler(timezone=riga_tz)

@scheduler.scheduled_job('cron', hour=21, minute=0)
def scheduled_tasks():
    print("üïí –ó–∞–ø—É—Å–∫ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞—á...")

    try:
        print("‚è∞ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ IPO...")
        run_ipo_monitor()
        print("‚úÖ IPO –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω")
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –≤ IPO –∞–Ω–∞–ª–∏–∑–µ:")
        traceback.print_exc()

    try:
        print("‚è∞ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç...")
        run_crypto_analysis()
        print("‚úÖ –ö—Ä–∏–ø—Ç–æ–∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω")
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –≤ –∫—Ä–∏–ø—Ç–æ–∞–Ω–∞–ª–∏–∑–µ:")
        traceback.print_exc()

    try:
        print("‚è∞ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Reddit...")
        run_reddit_monitor()
        print("‚úÖ Reddit –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à—ë–Ω")
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –≤ Reddit-–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ:")
        traceback.print_exc()

if __name__ == "__main__":
    try:
        print("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª (–µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 21:00 Europe/Riga)")
        scheduler.start()
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞:")
        traceback.print_exc()
        sys.exit(1)
