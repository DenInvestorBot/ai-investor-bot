import os
import logging
from apscheduler.schedulers.background import BackgroundScheduler
from telegram.ext import Updater, CommandHandler

# ---- –ò–º–ø–æ—Ä—Ç—ã –Ω–∞—à–∏—Ö –∑–∞–¥–∞—á
from crypto_monitor import run_crypto_monitor
from screener_config import ScreenerConfig
from screener import run_screener

# –ó–∞–≥–ª—É—à–∫–∏ (–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ) ‚Äî –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å, –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –±–æ–µ–≤—ã–µ –≤–µ—Ä—Å–∏–∏
try:
    from ipo_monitor import run_ipo_monitor
except Exception:  # noqa
    def run_ipo_monitor():
        logging.getLogger(__name__).info("IPO monitor: –∑–∞–≥–ª—É—à–∫–∞ ‚Äî –∑–∞–¥–∞—á–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞")

try:
    from reddit_monitor import run_reddit_monitor
except Exception:  # noqa
    def run_reddit_monitor():
        logging.getLogger(__name__).info("Reddit monitor: –∑–∞–≥–ª—É—à–∫–∞ ‚Äî –∑–∞–¥–∞—á–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞")


logging.basicConfig(
    format="%(asctime)s | %(levelname)s | %(name)s | %(message)s",
    level=logging.INFO,
)
logger = logging.getLogger("ai-investor-bot")


def cmd_start(update, context):
    update.message.reply_text("ü§ñ AI-Investor-Bot –∞–∫—Ç–∏–≤–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–π /status.")


def cmd_status(update, context):
    update.message.reply_text("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç. –ú–æ–Ω–∏—Ç–æ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã: crypto, ipo, reddit, screener.")


def main():
    token = os.environ.get("TELEGRAM_BOT_TOKEN")
    if not token:
        raise ValueError("–ù–µ –Ω–∞–π–¥–µ–Ω TELEGRAM_BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

    # Telegram bot poller
    updater = Updater(token, use_context=True)
    dp = updater.dispatcher
    dp.add_handler(CommandHandler("start", cmd_start))
    dp.add_handler(CommandHandler("status", cmd_status))

    # –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á
    scheduler = BackgroundScheduler(timezone="Europe/Riga")

    # 1) –¢—Ä–µ–Ω–¥–æ–≤—ã–µ –º–æ–Ω–µ—Ç—ã CoinGecko (–∫—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞)
    scheduler.add_job(run_crypto_monitor, "interval", minutes=30, id="crypto_trending")

    # 2) IPO –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (–∑–∞–≥–ª—É—à–∫–∞, –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å —Å–≤–æ–∏–º –º–æ–¥—É–ª–µ–º)
    scheduler.add_job(run_ipo_monitor, "interval", hours=6, id="ipo_monitor")

    # 3) Reddit –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (–∑–∞–≥–ª—É—à–∫–∞, –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å —Å–≤–æ–∏–º –º–æ–¥—É–ª–µ–º)
    scheduler.add_job(run_reddit_monitor, "interval", hours=1, id="reddit_monitor")

    # 4) –°–∫—Ä–∏–Ω–µ—Ä ¬´–¥–µ—à—ë–≤—ã—Ö x-–æ—Ö–æ—Ç–Ω–∏–∫–æ–≤¬ª
    cfg = ScreenerConfig()
    scheduler.add_job(lambda: run_screener(cfg), "cron", minute="*/15", id="cheap_x_screener")

    scheduler.start()

    logger.info("Bot starting polling‚Ä¶")
    updater.start_polling()
    updater.idle()


if __name__ == "__main__":
    main()
