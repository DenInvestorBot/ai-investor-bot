import logging
from telegram import ParseMode
from apscheduler.schedulers.blocking import BlockingScheduler
from datetime import datetime
import os

from crypto_monitor import run_crypto_analysis, fetch_new_coins, analyze_coin
from ipo_monitor import run_ipo_monitor, fetch_today_ipos
from reddit_monitor import run_reddit_monitor
from telegram import Bot

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")
bot = Bot(token=BOT_TOKEN)

def job():
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫—Ä–∏–ø—Ç—ã, IPO –∏ Reddit...")
    run_crypto_analysis()
    run_ipo_monitor()
    run_reddit_monitor()

def send_daily_summary():
    logger.info("üìä –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–µ—á–µ—Ä–Ω–µ–π —Å–≤–æ–¥–∫–∏...")

    # –ö—Ä–∏–ø—Ç–∞
    crypto_summary = "ü™ô *–ö—Ä–∏–ø—Ç–æ-–Ω–æ–≤–∏–Ω–∫–∏ —Å–µ–≥–æ–¥–Ω—è:*
"
    coins = fetch_new_coins()
    for coin in coins[:3]:
        name, analysis = analyze_coin(coin["id"])
        crypto_summary += f"‚Äî *{name}*: {analysis[:200]}...

"

    # IPO
    ipo_summary = "üìà *IPO —Å–µ–≥–æ–¥–Ω—è:*
"
    ipos = fetch_today_ipos()
    if ipos:
        for ipo in ipos[:3]:
            company = ipo.get("company", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
            symbol = ipo.get("symbol", "???")
            exchange = ipo.get("exchange", "??")
            date = ipo.get("date", "")
            ipo_summary += f"‚Äî {company} ({symbol}) –Ω–∞ {exchange}, –¥–∞—Ç–∞: {date}
"
    else:
        ipo_summary += "–°–µ–≥–æ–¥–Ω—è IPO –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.
"

    message = f"üìÖ *–°–≤–æ–¥–∫–∞ –Ω–∞ {datetime.now().strftime('%d.%m.%Y')}*

"
    message += crypto_summary + "
" + ipo_summary

    bot.send_message(chat_id=CHAT_ID, text=message, parse_mode=ParseMode.MARKDOWN)

def main():
    logger.info("ü§ñ AI-–∏–Ω–≤–µ—Å—Ç–æ—Ä –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    scheduler = BlockingScheduler()
    scheduler.add_job(job, 'interval', hours=6)
    scheduler.add_job(send_daily_summary, 'cron', hour=18, minute=0)
    job()  # –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ —Å—Ä–∞–∑—É
    scheduler.start()

if __name__ == "__main__":
    main()
