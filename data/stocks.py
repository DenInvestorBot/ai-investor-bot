# data/stocks.py
# Simple daily OHLCV loader for US stocks via yfinance
from __future__ import annotations
import pandas as pd
import yfinance as yf
import traceback

print("üìÑ [data/stocks] –ú–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω")

__all__ = ["load_stock_ohlcv_daily"]

def load_stock_ohlcv_daily(symbol: str, lookback_days: int = 430) -> pd.DataFrame:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç DataFrame —Å –∫–æ–ª–æ–Ω–∫–∞–º–∏ [open, high, low, close, volume], –∏–Ω–¥–µ–∫—Å UTC.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Yahoo Finance daily data. –¢–æ–ª—å–∫–æ –∑–∞–∫—Ä—ã—Ç—ã–µ –¥–Ω–µ–≤–Ω—ã–µ —Å–≤–µ—á–∏.
    """
    try:
        print(f"üöÄ [stocks] –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {symbol} ({lookback_days} –¥–Ω–µ–π)")
        df = yf.download(
            tickers=symbol,
            period=f"{lookback_days}d",
            interval="1d",
            auto_adjust=False,
            threads=False,
            progress=False,
        )
        if df is None or df.empty:
            print(f"‚ö†Ô∏è [stocks] –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {symbol}")
            return pd.DataFrame(columns=["open", "high", "low", "close", "volume"])

        out = df.rename(columns={
            "Open": "open",
            "High": "high",
            "Low": "low",
            "Close": "close",
            "Volume": "volume"
        })[["open", "high", "low", "close", "volume"]].copy()

        # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∫ UTC
        if out.index.tz is None:
            out.index = out.index.tz_localize("UTC")
        else:
            out.index = out.index.tz_convert("UTC")

        out = out.dropna()

        # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 320 –∑–∞–ø–∏—Å–µ–π
        if len(out) > 320:
            out = out.iloc[-320:]

        print(f"‚úÖ [stocks] –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(out)} —Å–≤–µ—á–µ–π –¥–ª—è {symbol}")
        return out
    except Exception:
        print(f"‚ùå [stocks] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {symbol}:")
        traceback.print_exc()
        return pd.DataFrame(columns=["open", "high", "low", "close", "volume"])
