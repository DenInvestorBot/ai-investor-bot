from __future__ import annotations
from zoneinfo import ZoneInfo
from apscheduler.triggers.cron import CronTrigger
from bot.advisor_jobs import run_tsla_gme_daily_job
import traceback

print("üìÑ [advisor_scheduler] –ú–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω")

RIGA_TZ = ZoneInfo("Europe/Riga")
DEFAULT_HOUR = 23
DEFAULT_MINUTE = 10  # –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è —Ä—ã–Ω–∫–∞ –°–®–ê (—Å –∑–∞–ø–∞—Å–æ–º)

def register_advisor_jobs(scheduler, hour: int = DEFAULT_HOUR, minute: int = DEFAULT_MINUTE):
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ —Å–æ–≤–µ—Ç–Ω–∏–∫–∞ (TSLA –∏ GME) –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫.
    """
    try:
        trigger = CronTrigger(
            day_of_week="mon-fri",
            hour=hour,
            minute=minute,
            timezone=RIGA_TZ
        )
        scheduler.add_job(
            run_tsla_gme_daily_job,
            trigger,
            id="advisor.daily.tsla_gme",
            replace_existing=True
        )
        print(f"‚úÖ [advisor_scheduler] –ó–∞–¥–∞—á–∞ —Å–æ–≤–µ—Ç–Ω–∏–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ {hour:02d}:{minute:02d} (Europe/Riga)")
    except Exception:
        print("‚ùå [advisor_scheduler] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–¥–∞—á–∏ —Å–æ–≤–µ—Ç–Ω–∏–∫–∞:")
        traceback.print_exc()
