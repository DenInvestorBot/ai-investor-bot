import os
import datetime
import requests
from openai import OpenAI

from crypto_monitor import send_to_telegram, _escape_markdown  # –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–¥–∏–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –≤ TG

IPO_API_KEY = os.getenv("IPO_API_KEY")
IPO_API_URL = f"https://financialmodelingprep.com/api/v3/ipo_calendar?apikey={IPO_API_KEY}"

def fetch_real_ipos():
    today = datetime.date.today()
    try:
        r = requests.get(IPO_API_URL, timeout=20)
        if not r.ok:
            return []
        ipos = r.json() or []
    except Exception:
        return []

    real_ipos = []
    for ipo in ipos:
        try:
            ipo_date = datetime.datetime.strptime(ipo["date"], "%Y-%m-%d").date()
            if (
                ipo_date <= today and
                ipo.get("exchange") in {"NASDAQ", "NYSE"} and
                ipo.get("price") and
                ipo.get("ticker") and
                ipo.get("companyName")
            ):
                real_ipos.append(ipo)
        except Exception:
            continue
    return real_ipos

def analyze_ipo(ipo, client: OpenAI):
    prompt = (
        "–¢—ã —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫. –°—Ñ–æ—Ä–º–∏—Ä—É–π –∫–æ—Ä–æ—Ç–∫–∏–π –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–≤–æ–¥ –ø–æ IPO.\n"
        "–ú–∞–∫—Å–∏–º—É–º 6 —Å–∂–∞—Ç—ã—Ö –ø—É–Ω–∫—Ç–æ–≤. –û—Ç–¥–µ–ª—å–Ω–æ –æ—Ç–º–µ—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Ä–∏—Å–∫–∏.\n\n"
        f"–ö–æ–º–ø–∞–Ω–∏—è: {ipo['companyName']}\n"
        f"–¢–∏–∫–µ—Ä: {ipo['ticker']}\n"
        f"–°–µ–∫—Ç–æ—Ä: {ipo.get('sector', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"–¶–µ–Ω–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è: {ipo.get('price', '–Ω–µ —É–∫–∞–∑–∞–Ω–∞')}\n"
    )
    try:
        completion = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": "–¢—ã —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫."},
                {"role": "user", "content": prompt},
            ],
            temperature=0.4,
            max_tokens=350,
        )
        return completion.choices[0].message.content.strip()
    except Exception as e:
        return f"‚ö†Ô∏è AI-–∞–Ω–∞–ª–∏–∑ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}"

def run_ipo_monitor():
    OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
    if not OPENAI_API_KEY:
        raise ValueError("‚ùå –ù–µ –∑–∞–¥–∞–Ω OPENAI_API_KEY")
    client = OpenAI(api_key=OPENAI_API_KEY)

    ipos = fetch_real_ipos()
    if not ipos:
        send_to_telegram(_escape_markdown("–°–µ–≥–æ–¥–Ω—è –Ω–µ –±—ã–ª–æ –Ω–æ–≤—ã—Ö IPO –Ω–∞ –±–∏—Ä–∂–µ."))
        return

    for ipo in ipos:
        header = (
            f"üìà {ipo['companyName']} ({ipo['ticker']})\n"
            f"–î–∞—Ç–∞ IPO: {ipo['date']}\n"
            f"–ë–∏—Ä–∂–∞: {ipo['exchange']}\n"
            f"–¶–µ–Ω–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è: {ipo['price']}\n"
            f"–°–µ–∫—Ç–æ—Ä: {ipo.get('sector', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n\n"
        )
        analysis = analyze_ipo(ipo, client)
        send_to_telegram(_escape_markdown(header + analysis))
