import requests
import datetime
import os
import openai
from telegram import Bot

# –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
if not TELEGRAM_TOKEN:
    raise ValueError("‚ùå TELEGRAM_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
if not CHAT_ID:
    raise ValueError("‚ùå CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
if not OPENAI_API_KEY:
    raise ValueError("‚ùå OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

# –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–∏–ø–æ–≤
CHAT_ID = int(CHAT_ID)
bot = Bot(token=TELEGRAM_TOKEN)
openai.api_key = OPENAI_API_KEY

# API –¥–ª—è IPO (—É–∫–∞–∂–∏ —Å–≤–æ–π –∫–ª—é—á –≤ —Å—Å—ã–ª–∫–µ)
IPO_API_URL = "https://financialmodelingprep.com/api/v3/ipo_calendar?apikey=YOUR_API_KEY"

def fetch_real_ipos():
    today = datetime.date.today()
    response = requests.get(IPO_API_URL)
    if not response.ok:
        return []

    ipos = response.json()
    real_ipos = []

    for ipo in ipos:
        try:
            ipo_date = datetime.datetime.strptime(ipo["date"], "%Y-%m-%d").date()
            if (
                ipo_date <= today and
                ipo.get("exchange") in ["NASDAQ", "NYSE"] and
                ipo.get("price") and
                ipo.get("ticker")
            ):
                real_ipos.append(ipo)
        except Exception:
            continue

    return real_ipos

def analyze_ipo(ipo):
    prompt = (
        f"–ö–æ–º–ø–∞–Ω–∏—è: {ipo['companyName']}\n"
        f"–¢–∏–∫–µ—Ä: {ipo['ticker']}\n"
        f"–°–µ–∫—Ç–æ—Ä: {ipo.get('sector', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"–¶–µ–Ω–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è: {ipo.get('price', '–Ω–µ —É–∫–∞–∑–∞–Ω–∞')}\n\n"
        "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—É—é –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —ç—Ç–æ–π IPO. –£–∫–∞–∂–∏ –ø–ª—é—Å—ã, —Ä–∏—Å–∫–∏ –∏ –∫–æ–º—É –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ."
    )

    try:
        completion = openai.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "–¢—ã —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.4,
        )
        return completion.choices[0].message.content
    except Exception as e:
        return f"‚ö†Ô∏è AI-–∞–Ω–∞–ª–∏–∑ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}"

def run_ipo_monitor():
    ipos = fetch_real_ipos()
    if not ipos:
        bot.send_message(chat_id=CHAT_ID, text="–°–µ–≥–æ–¥–Ω—è –Ω–µ –±—ã–ª–æ –Ω–æ–≤—ã—Ö IPO –Ω–∞ –±–∏—Ä–∂–µ.")
        return

    for ipo in ipos:
        message = (
            f"üìà {ipo['companyName']} ({ipo['ticker']})\n"
            f"–î–∞—Ç–∞ IPO: {ipo['date']}\n"
            f"–ë–∏—Ä–∂–∞: {ipo['exchange']}\n"
            f"–¶–µ–Ω–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è: {ipo['price']}\n"
            f"–°–µ–∫—Ç–æ—Ä: {ipo.get('sector', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n\n"
        )
        analysis = analyze_ipo(ipo)
        full_message = message + analysis
        bot.send_message(chat_id=CHAT_ID, text=full_message)
