import os
import requests
import openai

BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = int(os.getenv("CHAT_ID"))
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
openai.api_key = OPENAI_API_KEY

def send_to_telegram(message):
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    data = {
        "chat_id": CHAT_ID,
        "text": message,
        "parse_mode": "Markdown"
    }
    try:
        requests.post(url, data=data, timeout=10)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {e}")

def fetch_ipo_data():
    """
    –ó–¥–µ—Å—å ‚Äî –ø—Ä–∏–º–µ—Ä —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ (–∏–ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–º–∏) –¥–∞–Ω–Ω—ã–º–∏.
    –†–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–µ—Ä –º–æ–∂–µ—à—å –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏.
    –ö–∞–∂–¥—ã–π IPO ‚Äî tuple: (name, ticker, date, sector, cap, description)
    """
    return [
        ("Acme Corp", "ACME", "2025-07-24", "Tech", 1_000_000_000, "Acme —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å–∞."),
        ("QuantumX", "QTX", "2025-07-25", "Healthcare", 700_000_000, "QuantumX ‚Äî –±–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –ò–ò –∏ big data –≤ –º–µ–¥–∏—Ü–∏–Ω–µ."),
    ]

def analyze_ipo(name, ticker, date, sector, cap, description):
    prompt = (
        f"IPO: {name} ({ticker})\n"
        f"–°–µ–∫—Ç–æ—Ä: {sector}\n"
        f"–ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è: ${cap}\n"
        f"–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞ –Ω–∞ –±–∏—Ä–∂—É: {date}\n"
        f"–û–ø–∏—Å–∞–Ω–∏–µ: {description}\n\n"
        "–î–∞–π –∫—Ä–∞—Ç–∫–∏–π –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —ç—Ç–æ–≥–æ IPO:\n"
        "- –ö–∞–∫–∏–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã?\n"
        "- –ù–∞—Å–∫–æ–ª—å–∫–æ –æ–Ω–æ —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω–æ–µ?\n"
        "- –ö–æ–º—É –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ?\n"
        "- –°–ª–µ–¥—É–µ—Ç –ª–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –≤–æ–∑–¥–µ—Ä–∂–∞—Ç—å—Å—è?"
    )
    try:
        response = openai.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "user", "content": prompt}],
            max_tokens=350
        )
        return response.choices[0].message.content
    except openai.RateLimitError:
        send_to_telegram("‚ö†Ô∏è OpenAI: –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ IPO. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
        return "‚ö†Ô∏è –ê–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω: –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç OpenAI."
    except Exception as e:
        send_to_telegram(f"‚ùå –û—à–∏–±–∫–∞ AI-–∞–Ω–∞–ª–∏–∑–∞ IPO: {e}")
        return f"‚ùå –û—à–∏–±–∫–∞ AI-–∞–Ω–∞–ª–∏–∑–∞ IPO: {e}"

def run_ipo_monitor():
    ipos = fetch_ipo_data()
    if not ipos:
        send_to_telegram("‚ö†Ô∏è –°–µ–≥–æ–¥–Ω—è –Ω–µ—Ç –Ω–æ–≤—ã—Ö IPO –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.")
    else:
        for name, ticker, date, sector, cap, description in ipos:
            analysis = analyze_ipo(name, ticker, date, sector, cap, description)
            msg = (
                f"üìà *{name}* ({ticker})\n"
                f"–°–µ–∫—Ç–æ—Ä: {sector}\n"
                f"–ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è: ${cap}\n"
                f"–î–∞—Ç–∞ IPO: {date}\n"
                f"–û–ø–∏—Å–∞–Ω–∏–µ: {description}\n\n"
                f"*AI-–ê–Ω–∞–ª–∏–∑:*\n{analysis}"
            )
            send_to_telegram(msg)

