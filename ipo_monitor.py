import os
import requests
import datetime
from openai import OpenAI
from telegram import Bot
import traceback

print("üìÑ [ipo_monitor] –ú–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω")

# ===== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è =====
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN") or os.getenv("BOT_TOKEN")
CHAT_ID = int(os.getenv("CHAT_ID") or os.getenv("TELEGRAM_CHAT_ID", "0"))
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
IPO_API_KEY = os.getenv("IPO_API_KEY")

if not TELEGRAM_TOKEN or not CHAT_ID:
    print("‚ö†Ô∏è [ipo_monitor] –í–ù–ò–ú–ê–ù–ò–ï: –ù–µ –∑–∞–¥–∞–Ω—ã TELEGRAM_TOKEN –∏/–∏–ª–∏ CHAT_ID ‚Äî —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram –Ω–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è")
if not OPENAI_API_KEY:
    print("‚ö†Ô∏è [ipo_monitor] –í–ù–ò–ú–ê–ù–ò–ï: –ù–µ –∑–∞–¥–∞–Ω OPENAI_API_KEY ‚Äî AI-–∞–Ω–∞–ª–∏–∑ IPO –æ—Ç–∫–ª—é—á—ë–Ω")
if not IPO_API_KEY:
    print("‚ö†Ô∏è [ipo_monitor] –í–ù–ò–ú–ê–ù–ò–ï: –ù–µ –∑–∞–¥–∞–Ω IPO_API_KEY ‚Äî –¥–∞–Ω–Ω—ã–µ IPO –Ω–µ –±—É–¥—É—Ç –ø–æ–ª—É—á–µ–Ω—ã")

IPO_API_URL = f"https://financialmodelingprep.com/api/v3/ipo_calendar?apikey={IPO_API_KEY}" if IPO_API_KEY else None
client = OpenAI(api_key=OPENAI_API_KEY) if OPENAI_API_KEY else None

# ===== –§—É–Ω–∫—Ü–∏–∏ =====
def fetch_real_ipos():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö IPO"""
    if not IPO_API_URL:
        print("‚ùå [ipo_monitor] –ù–µ—Ç IPO_API_KEY ‚Äî –ø—Ä–æ–ø—É—Å–∫ –∑–∞–ø—Ä–æ—Å–∞")
        return []

    today = datetime.date.today()
    try:
        response = requests.get(IPO_API_URL, timeout=15)
        if not response.ok:
            print(f"‚ö†Ô∏è [ipo_monitor] –û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞ API IPO: {response.status_code}")
            return []

        ipos = response.json()
        real_ipos = []
        for ipo in ipos:
            try:
                ipo_date = datetime.datetime.strptime(ipo["date"], "%Y-%m-%d").date()
                if (
                    ipo_date <= today and
                    ipo.get("exchange") in ["NASDAQ", "NYSE"] and
                    ipo.get("price") and
                    ipo.get("ticker")
                ):
                    real_ipos.append(ipo)
            except Exception:
                continue
        return real_ipos
    except Exception:
        print("‚ùå [ipo_monitor] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ IPO:")
        traceback.print_exc()
        return []

def analyze_ipo(ipo):
    """–ê–Ω–∞–ª–∏–∑ IPO —Å –ø–æ–º–æ—â—å—é OpenAI"""
    if not client:
        return "AI-–∞–Ω–∞–ª–∏–∑ –æ—Ç–∫–ª—é—á—ë–Ω (–Ω–µ—Ç OPENAI_API_KEY)."

    prompt = (
        f"–ö–æ–º–ø–∞–Ω–∏—è: {ipo['companyName']}\n"
        f"–¢–∏–∫–µ—Ä: {ipo['ticker']}\n"
        f"–°–µ–∫—Ç–æ—Ä: {ipo.get('sector', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"–¶–µ–Ω–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è: {ipo.get('price', '–Ω–µ —É–∫–∞–∑–∞–Ω–∞')}\n\n"
        "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—É—é –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —ç—Ç–æ–π IPO. "
        "–£–∫–∞–∂–∏ –ø–ª—é—Å—ã, —Ä–∏—Å–∫–∏ –∏ –∫–æ–º—É –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ."
    )

    try:
        completion = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": "–¢—ã —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.4,
        )
        return completion.choices[0].message.content.strip()
    except Exception as e:
        print(f"‚ùå [ipo_monitor] –û—à–∏–±–∫–∞ AI-–∞–Ω–∞–ª–∏–∑–∞ IPO {ipo['ticker']}: {e}")
        return f"‚ö†Ô∏è AI-–∞–Ω–∞–ª–∏–∑ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}"

def run_ipo_monitor():
    """–ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∞–Ω–∞–ª–∏–∑–∞ IPO"""
    print("üöÄ [ipo_monitor] –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ IPO...")

    bot = None
    if TELEGRAM_TOKEN and CHAT_ID:
        try:
            bot = Bot(token=TELEGRAM_TOKEN)
        except Exception:
            print("‚ùå [ipo_monitor] –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram-–±–æ—Ç–∞:")
            traceback.print_exc()

    ipos = fetch_real_ipos()
    if not ipos:
        if bot:
            bot.send_message(chat_id=CHAT_ID, text="–°–µ–≥–æ–¥–Ω—è –Ω–µ –±—ã–ª–æ –Ω–æ–≤—ã—Ö IPO –Ω–∞ –±–∏—Ä–∂–µ.")
        print("‚ÑπÔ∏è [ipo_monitor] –ù–æ–≤—ã—Ö IPO –Ω–µ—Ç")
        return

    for ipo in ipos:
        message = (
            f"üìà {ipo['companyName']} ({ipo['ticker']})\n"
            f"–î–∞—Ç–∞ IPO: {ipo['date']}\n"
            f"–ë–∏—Ä–∂–∞: {ipo['exchange']}\n"
            f"–¶–µ–Ω–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è: {ipo['price']}\n"
            f"–°–µ–∫—Ç–æ—Ä: {ipo.get('sector', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n\n"
        )
        analysis = analyze_ipo(ipo)
        full_message = message + analysis

        if bot:
            try:
                bot.send_message(chat_id=CHAT_ID, text=full_message)
            except Exception:
                print("‚ùå [ipo_monitor] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ IPO –≤ Telegram:")
                traceback.print_exc()
        else:
            print(full_message)
