import requests
import datetime
import os
from telegram import Bot
import openai

BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
FMP_API_KEY = os.getenv("FMP_API_KEY")

bot = Bot(token=BOT_TOKEN)
openai.api_key = OPENAI_API_KEY

def fetch_today_ipos():
    today = datetime.date.today().isoformat()
    url = f"https://financialmodelingprep.com/api/v3/ipo_calendar?from={today}&to={today}&apikey={FMP_API_KEY}"
    try:
        response = requests.get(url)
        if response.ok:
            return response.json().get("ipoCalendar", [])
    except Exception as e:
        pass
    return []  

def analyze_with_gpt(text):
    prompt = f"–î–∞–π –∫—Ä–∞—Ç–∫—É—é –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—É—é –æ—Ü–µ–Ω–∫—É IPO: {text}. –°—Ç–æ–∏—Ç –ª–∏ —Å–ª–µ–¥–∏—Ç—å –∑–∞ —ç—Ç–æ–π –∫–æ–º–ø–∞–Ω–∏–µ–π?"
    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "user", "content": prompt}],
            max_tokens=150
        )
        return response.choices[0].message["content"].strip()
    except Exception as e:
        return "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–Ω–∞–ª–∏–∑ –æ—Ç GPT."

def send_ipo_alert(name, symbol, exchange, date):
    summary = analyze_with_gpt(f"{name} ({symbol}), –±–∏—Ä–∂–∞: {exchange}, –¥–∞—Ç–∞ IPO: {date}")
    message = (
        f"üìà –ù–æ–≤–æ–µ IPO:\n"
        f"‚Äî –ö–æ–º–ø–∞–Ω–∏—è: {name} ({symbol})\n"
        f"‚Äî –ë–∏—Ä–∂–∞: {exchange}\n"
        f"‚Äî –î–∞—Ç–∞: {date}\n\n"
        f"üß† GPT-–∞–Ω–∞–ª–∏–∑:\n{summary}"
    )
    bot.send_message(chat_id=CHAT_ID, text=message)

def main():
    ipos = fetch_today_ipos()
    for ipo in ipos:
        name = ipo.get("company", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
        symbol = ipo.get("symbol", "???")
        exchange = ipo.get("exchange", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        date = ipo.get("date", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        send_ipo_alert(name, symbol, exchange, date)

if __name__ == "__main__":
    main()
